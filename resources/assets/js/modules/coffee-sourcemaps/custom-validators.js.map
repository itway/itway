{"version":3,"sources":["custom-validators.coffee"],"names":[],"mappings":";AAAA;;;;;AAAA;EAIA,CAAC,CAAC,OAAO,CAAC,UAAV,GACE;IAAA,OAAA,EAAS,SAAC,GAAD;AACP,UAAA;MAAA,CAAA,GAAI;MACJ,IAAG,GAAG,CAAC,KAAJ,CAAU,CAAV,CAAH;eAAqB,MAAM,CAAC,GAA5B;OAAA,MAAA;eAAoC,MAApC;;IAFO,CAAT;IAIA,SAAA,EAAW,SAAC,GAAD,EAAM,IAAN;AACT,UAAA;MAAA,KAAA,GAAQ;AACR;QACE,CAAA,GAAI,KAAK,CAAC,WAAN,CAAkB,IAAlB,CAAuB,CAAC,IAAxB,CAA6B,GAAG,CAAC,OAAJ,CAAY,cAAZ,EAA4B,EAA5B,CAA7B;QACJ,IAAA,GAAO,CAAE,CAAA,CAAA;QACT,IAAA,GAAO,CAAE,CAAA,CAAA;AACT,eAAO,UAAA,GAAa,IAAb,GAAoB,GAApB,GAA0B,KAJnC;OAAA,aAAA;QAKM;QACJ,MANF;;IAFS,CAJX;IAmBA,WAAA,EAAa,SAAC,IAAD;AACX,UAAA;MAAA,IAAA,GAAO,IAAA,IAAQ;MAEf,QAAA,GAAW,CACT,iBADS,EAET,YAFS,CAGV,CAAC,MAHS,CAGF,IAAI,CAAC,aAAL,IAAsB,EAHpB;aAKP,IAAA,MAAA,CAAO,qEAAqE,CAAC,MAAtE,GAA+E,GAA/E,GAAqF,QAAQ,CAAC,IAAT,CAAc,GAAd,CAArF,GAA0G,GAA1G,GAAgH,gCAAgC,CAAC,MAAxJ;IARO,CAnBb;;AALF","file":"custom-validators.js","sourceRoot":"/source/","sourcesContent":["###*\r\n# JavaScript function to match (and return) the video Id\r\n# of any valid Youtube Url, given as input string.\r\n###\r\n$.ItwayIO.cValidator =\r\n  ytVidId: (url) ->\r\n    p = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/\r\n    if url.match(p) then RegExp.$1 else false\r\n\r\n  githubLNK: (url, opts) ->\r\n    _this = this\r\n    try\r\n      m = _this.githubLNKre(opts).exec(url.replace(/\\.git(#.*)?$/, ''))\r\n      host = m[1]\r\n      path = m[2]\r\n      return 'https://' + host + '/' + path\r\n    catch err\r\n      false\r\n    return\r\n\r\n  # generate the git:// parsing regex\r\n  # with options, e.g., the ability\r\n  # to specify multiple GHE domains.\r\n\r\n  githubLNKre: (opts) ->\r\n    opts = opts or {}\r\n    # whitelist of URLs that should be treated as GitHub repos.\r\n    baseUrls = [\r\n      'gist.github.com'\r\n      'github.com'\r\n    ].concat(opts.extraBaseUrls or [])\r\n    # build regex from whitelist.\r\n    new RegExp(/^(?:https?:\\/\\/|git:\\/\\/|git\\+ssh:\\/\\/|git\\+https:\\/\\/)?(?:[^@]+@)?/.source + '(' + baseUrls.join('|') + ')' + /[:\\/]([^\\/]+\\/[^\\/]+?|[0-9]+)$/.source)\r\n"]}