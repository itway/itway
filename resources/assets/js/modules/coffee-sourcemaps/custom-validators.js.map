{"version":3,"sources":["custom-validators.coffee"],"names":[],"mappings":";AAAA;;;;;AAAA;EAIA,CAAC,CAAC,OAAO,CAAC,UAAV,GACE;IAAA,OAAA,EAAS,SAAC,GAAD;AACP,UAAA;MAAA,CAAA,GAAI;MACJ,IAAG,GAAG,CAAC,KAAJ,CAAU,CAAV,CAAH;eAAqB,MAAM,CAAC,GAA5B;OAAA,MAAA;eAAoC,MAApC;;IAFO,CAAT;IAIA,SAAA,EAAW,SAAC,GAAD,EAAM,IAAN;AACT,UAAA;MAAA,KAAA,GAAQ;AACR;QACE,CAAA,GAAI,KAAK,CAAC,WAAN,CAAkB,IAAlB,CAAuB,CAAC,IAAxB,CAA6B,GAAG,CAAC,OAAJ,CAAY,cAAZ,EAA4B,EAA5B,CAA7B;QACJ,IAAA,GAAO,CAAE,CAAA,CAAA;QACT,IAAA,GAAO,CAAE,CAAA,CAAA;AACT,eAAO,UAAA,GAAa,IAAb,GAAoB,GAApB,GAA0B,KAJnC;OAAA,aAAA;QAKM;QACJ,MANF;;IAFS,CAJX;IAiBA,gBAAA,EAAkB,SAAC,KAAD;MAChB,IAAI,KAAA,IAAS,KAAK,CAAC,MAAN,IAAgB,CAA7B;eAAqC,MAArC;OAAA,MAAA;eAAgD,MAAhD;;IADgB,CAjBlB;IAoBA,WAAA,EAAa,SAAC,IAAD;AACX,UAAA;MAAA,IAAA,GAAO,IAAA,IAAQ;MAEf,QAAA,GAAW,CACT,iBADS,EAET,YAFS,CAGV,CAAC,MAHS,CAGF,IAAI,CAAC,aAAL,IAAsB,EAHpB;aAKP,IAAA,MAAA,CAAO,qEAAqE,CAAC,MAAtE,GAA+E,GAA/E,GAAqF,QAAQ,CAAC,IAAT,CAAc,GAAd,CAArF,GAA0G,GAA1G,GAAgH,gCAAgC,CAAC,MAAxJ;IARO,CApBb;IA6BA,MAAA,EAAQ,SAAC,GAAD;AACN,UAAA;MAAA,CAAA,GAAI,4FAAA,GACE,2EADF,GAEE,6EAFF,GAGE,6CAHF,GAIE,KAJF,GAKE,0CALF,GAME,iCANF,GAOE,yCAPF,GAQE,YARF,GASE,qBATF,GAUE,YAVF,GAWE,iCAXF,GAYE,YAZF,GAaE,6BAbF,GAcE,mBAdF,GAeE,gBAfF,GAgBE,iBAhBF,GAiBE,+CAjBF,GAkBE,+BAlBF,GAmBE,aAnBF,GAoBE,4BApBF,GAqBE,KArBF,GAsBE,UAtBF,GAuBE,0BAvBF,GAwBE,sCAxBF,GAyBE,aAzBF,GA0BE,aA1BF,GA2BE,QA3BF,GA4BE,SA5BF,GA6BE,WA7BF,GA8BE,uBA9BF,GA+BE,gEA/BF,GAgCE,mEAhCF,GAiCE,qEAjCF,GAkCE,sBAlCF,GAmCE,mBAnCF,GAoCE,iDApCF,GAqCE,4DArCF,GAsCE;MACN,IAAG,GAAG,CAAC,KAAJ,CAAU,CAAV,CAAH;eAAqB,MAAM,CAAC,GAA5B;OAAA,MAAA;eAAoC,MAApC;;IAxCM,CA7BR;;AALF","file":"custom-validators.js","sourceRoot":"/source/","sourcesContent":["###*\r\n# JavaScript function to match (and return) the video Id\r\n# of any valid Youtube Url, given as input string.\r\n###\r\n$.ItwayIO.cValidator =\r\n  ytVidId: (url) ->\r\n    p = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/\r\n    if url.match(p) then RegExp.$1 else false\r\n\r\n  githubLNK: (url, opts) ->\r\n    _this = this\r\n    try\r\n      m = _this.githubLNKre(opts).exec(url.replace(/\\.git(#.*)?$/, ''))\r\n      host = m[1]\r\n      path = m[2]\r\n      return 'https://' + host + '/' + path\r\n    catch err\r\n      false\r\n    return\r\n  #s generate the git:// parsing regex\r\n  # with options, e.g., the ability\r\n  # to specify multiple GHE domains.\r\n  speakersNotEmpty: (value) ->\r\n    if (value && value.length >= 2) then value else false\r\n\r\n  githubLNKre: (opts) ->\r\n    opts = opts or {}\r\n    # whitelist of URLs that should be treated as GitHub repos.\r\n    baseUrls = [\r\n      'gist.github.com'\r\n      'github.com'\r\n    ].concat(opts.extraBaseUrls or [])\r\n    # build regex from whitelist.\r\n    new RegExp(/^(?:https?:\\/\\/|git:\\/\\/|git\\+ssh:\\/\\/|git\\+https:\\/\\/)?(?:[^@]+@)?/.source + '(' + baseUrls.join('|') + ')' + /[:\\/]([^\\/]+\\/[^\\/]+?|[0-9]+)$/.source)\r\n  urlReg: (url) ->\r\n    p = \"((?:(http|https|Http|Https|rtsp|Rtsp):\\\\/\\\\/(?:(?:[a-zA-Z0-9\\\\$\\\\-\\\\_\\\\.\\\\+\\\\!\\\\*\\\\'\\\\(\\\\)\"+\r\n          \"\\\\,\\\\;\\\\?\\\\&\\\\=]|(?:\\\\%[a-fA-F0-9]{2})){1,64}(?:\\\\:(?:[a-zA-Z0-9\\\\$\\\\-\\\\_\"+\r\n          \"\\\\.\\\\+\\\\!\\\\*\\\\'\\\\(\\\\)\\\\,\\\\;\\\\?\\\\&\\\\=]|(?:\\\\%[a-fA-F0-9]{2})){1,25})?\\\\@)?)?\"+\r\n          \"((?:(?:[a-zA-Z0-9][a-zA-Z0-9\\\\-]{0,64}\\\\.)+\" +\r\n          \"(?:\"+\r\n          \"(?:aero|arpa|asia|a[cdefgilmnoqrstuwxz])\"+\r\n          \"|(?:biz|b[abdefghijmnorstvwyz])\"+\r\n          \"|(?:cat|com|coop|c[acdfghiklmnoruvxyz])\"+\r\n          \"|d[ejkmoz]\"+\r\n          \"|(?:edu|e[cegrstu])\"+\r\n          \"|f[ijkmor]\"+\r\n          \"|(?:gov|g[abdefghilmnpqrstuwy])\"+\r\n          \"|h[kmnrtu]\"+\r\n          \"|(?:info|int|i[delmnoqrst])\"+\r\n          \"|(?:jobs|j[emop])\"+\r\n          \"|k[eghimnrwyz]\"+\r\n          \"|l[abcikrstuvy]\"+\r\n          \"|(?:mil|mobi|museum|m[acdghklmnopqrstuvwxyz])\"+\r\n          \"|(?:name|net|n[acefgilopruz])\"+\r\n          \"|(?:org|om)\"+\r\n          \"|(?:pro|p[aefghklmnrstwy])\"+\r\n          \"|qa\"+\r\n          \"|r[eouw]\"+\r\n          \"|s[abcdeghijklmnortuvyz]\"+\r\n          \"|(?:tel|travel|t[cdfghjklmnoprtvwz])\"+\r\n          \"|u[agkmsyz]\"+\r\n          \"|v[aceginu]\"+\r\n          \"|w[fs]\"+\r\n          \"|y[etu]\"+\r\n          \"|z[amw]))\"+\r\n          \"|(?:(?:25[0-5]|2[0-4]\"+\r\n          \"[0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9])\\\\.(?:25[0-5]|2[0-4][0-9]\"+\r\n          \"|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\\\\.(?:25[0-5]|2[0-4][0-9]|[0-1]\"+\r\n          \"[0-9]{2}|[1-9][0-9]|[1-9]|0)\\\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}\"+\r\n          \"|[1-9][0-9]|[0-9])))\"+\r\n          \"(?:\\\\:\\\\d{1,5})?)\"+\r\n          \"(\\\\/(?:(?:[a-zA-Z0-9\\\\;\\\\/\\\\?\\\\:\\\\@\\\\&\\\\=\\\\#\\\\~\"+\r\n          \"\\\\-\\\\.\\\\+\\\\!\\\\*\\\\'\\\\(\\\\)\\\\,\\\\_])|(?:\\\\%[a-fA-F0-9]{2}))*)?\"+\r\n          \"(?:\\\\b|$)\"\r\n    if url.match(p) then RegExp.$1 else false"]}